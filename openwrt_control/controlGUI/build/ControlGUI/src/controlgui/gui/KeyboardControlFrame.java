/*
 * KeyboardControlFrame.java
 *
 * Created on March 21, 2008, 10:09 AM
 */

package controlgui.gui;

import controlgui.com.RemoteCommand;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author  kshaw
 */
public class KeyboardControlFrame extends javax.swing.JFrame {
    
    private static final int INCREMENT = 25;
    
    private short leftSpeedVal = 0;
    private short rightSpeedVal = 0;
    
    private RemoteCommand remoteCommand;
    
    /** Creates new form KeyboardControlFrame */
    public KeyboardControlFrame(RemoteCommand remoteCommand) {
        this.remoteCommand = remoteCommand;
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        leftSpeed = new javax.swing.JTextField();
        rightSpeed = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        stopButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        leftSpeed.setEditable(false);
        leftSpeed.setText("0");
        leftSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                leftSpeedKeyPressed(evt);
            }
        });

        rightSpeed.setEditable(false);
        rightSpeed.setText("0");
        rightSpeed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightSpeedActionPerformed(evt);
            }
        });
        rightSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rightSpeedKeyPressed(evt);
            }
        });

        jLabel1.setText("Left:");

        jLabel2.setText("Right:");

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leftSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(65, 65, 65)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rightSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(closeButton)
                            .addComponent(stopButton))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rightSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(leftSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(stopButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(closeButton)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rightSpeedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightSpeedActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_rightSpeedActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        updateFromChar('5');
        leftSpeed.requestFocus();
}//GEN-LAST:event_stopButtonActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        handleKeyPress(evt);
    }//GEN-LAST:event_formKeyPressed

    private void leftSpeedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_leftSpeedKeyPressed
        handleKeyPress(evt);
    }//GEN-LAST:event_leftSpeedKeyPressed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void rightSpeedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightSpeedKeyPressed
        handleKeyPress(evt);
    }//GEN-LAST:event_rightSpeedKeyPressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField leftSpeed;
    private javax.swing.JTextField rightSpeed;
    private javax.swing.JButton stopButton;
    // End of variables declaration//GEN-END:variables
    
    private void handleKeyPress(java.awt.event.KeyEvent evt)  {
        char key = evt.getKeyChar();
        updateFromChar(key);
    }
    
    private void updateFromChar(char key){
        try {

            switch (key) {
                case '8':
                case 'w':
                    rightSpeedVal += INCREMENT;
                    leftSpeedVal += INCREMENT;
                    break;
                case '2':
                case 'z':
                    rightSpeedVal -= INCREMENT;
                    leftSpeedVal -= INCREMENT;
                    break;
                case '4':
                case 'a':
                    rightSpeedVal += INCREMENT;
                    break;
                case '6':
                case 'd':
                    leftSpeedVal += INCREMENT;
                    break;
                case '5':
                case 's':
                    rightSpeedVal = 0;
                    leftSpeedVal = 0;
                    break;
                default:
                    return;
            }
            
            if(rightSpeedVal > 500){
                rightSpeedVal = 500;
            }
            if(leftSpeedVal > 500){
                leftSpeedVal = 500;
            }
            if(rightSpeedVal < -500){
                rightSpeedVal = -500;
            }
            if(leftSpeedVal < -500){
                leftSpeedVal = -500;
            }            
            remoteCommand.driveDirect(rightSpeedVal, leftSpeedVal);
            rightSpeed.setText(Short.toString(rightSpeedVal));
            leftSpeed.setText(Short.toString(leftSpeedVal));
            
        } catch (IOException ex) {
            Logger.getLogger(KeyboardControlFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
}
