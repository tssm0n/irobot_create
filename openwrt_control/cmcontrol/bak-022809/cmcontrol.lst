   1               		.file	"cmcontrol.c"
   2               		.arch atmega168
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               	.global	sensors_index
  11               	.global	sensors_index
  12               		.section .bss
  15               	sensors_index:
  16 0000 00        		.skip 1,0
  17               	.global	sensors_flag
  18               	.global	sensors_flag
  21               	sensors_flag:
  22 0001 00        		.skip 1,0
  23               	.global	debugCount
  24               	.global	debugCount
  27               	debugCount:
  28 0002 00        		.skip 1,0
  29               	.global	angle
  30               	.global	angle
  33               	angle:
  34 0003 0000      		.skip 2,0
  35               	.global	distance
  36               	.global	distance
  39               	distance:
  40 0005 0000      		.skip 2,0
  41               	.global	doRelay
  42               	.global	doRelay
  45               	doRelay:
  46 0007 00        		.skip 1,0
  47               	.global	localAck
  48               	.global	localAck
  51               	localAck:
  52 0008 00        		.skip 1,0
  53               	.global	localAckIndex
  54               	.global	localAckIndex
  57               	localAckIndex:
  58 0009 00        		.skip 1,0
  59               	.global	prevVal
  60               		.data
  63               	prevVal:
  64 0000 FF        		.byte	-1
  65               	.global	myport
  66               	.global	myport
  67               		.section .bss
  70               	myport:
  71 000a 00        		.skip 1,0
  72               	.global	receiveIndex
  73               	.global	receiveIndex
  76               	receiveIndex:
  77 000b 00        		.skip 1,0
  78               	.global	timer_on
  79               	.global	timer_on
  82               	timer_on:
  83 000c 00        		.skip 1,0
  84               	.global	timer_cnt
  85               	.global	timer_cnt
  88               	timer_cnt:
  89 000d 0000      		.skip 2,0
  90               		.text
  91               	.global	byteTx
  93               	byteTx:
  94               	/* prologue: frame size=0 */
  95               	/* prologue end (size=0) */
  96 0000 982F      		mov r25,r24
  97               	.L2:
  98 0002 8091 C000 		lds r24,192
  99 0006 85FF      		sbrs r24,5
 100 0008 FCCF      		rjmp .L2
 101 000a 9093 C600 		sts 198,r25
 102               	/* epilogue: frame size=0 */
 103 000e 0895      		ret
 104               	/* epilogue end (size=1) */
 105               	/* function byteTx size 8 (7) */
 107               	.global	checkLocalAck
 109               	checkLocalAck:
 110               	/* prologue: frame size=0 */
 111               	/* prologue end (size=0) */
 112 0010 982F      		mov r25,r24
 113 0012 8091 0000 		lds r24,localAckIndex
 114 0016 80FD      		sbrc r24,0
 115 0018 02C0      		rjmp .L8
 116 001a 9739      		cpi r25,lo8(-105)
 117 001c 31F0      		breq .L7
 118               	.L8:
 119 001e 8091 0000 		lds r24,localAckIndex
 120 0022 80FF      		sbrs r24,0
 121 0024 08C0      		rjmp .L6
 122 0026 9938      		cpi r25,lo8(-119)
 123 0028 31F4      		brne .L6
 124               	.L7:
 125 002a 8091 0000 		lds r24,localAckIndex
 126 002e 8F5F      		subi r24,lo8(-(1))
 127 0030 8093 0000 		sts localAckIndex,r24
 128 0034 02C0      		rjmp .L9
 129               	.L6:
 130 0036 1092 0000 		sts localAckIndex,__zero_reg__
 131               	.L9:
 132 003a 8091 0000 		lds r24,localAckIndex
 133 003e 8630      		cpi r24,lo8(6)
 134 0040 19F4      		brne .L10
 135 0042 81E0      		ldi r24,lo8(1)
 136 0044 90E0      		ldi r25,hi8(1)
 137 0046 0895      		ret
 138               	.L10:
 139 0048 80E0      		ldi r24,lo8(0)
 140 004a 90E0      		ldi r25,hi8(0)
 141 004c 0895      		ret
 142               	/* epilogue: frame size=0 */
 143               	/* epilogue: noreturn */
 144               	/* epilogue end (size=0) */
 145               	/* function checkLocalAck size 31 (31) */
 147               	.global	__vector_11
 149               	__vector_11:
 150               	/* prologue: frame size=0 */
 151 004e 1F92      		push __zero_reg__
 152 0050 0F92      		push __tmp_reg__
 153 0052 0FB6      		in __tmp_reg__,__SREG__
 154 0054 0F92      		push __tmp_reg__
 155 0056 1124      		clr __zero_reg__
 156 0058 8F93      		push r24
 157 005a 9F93      		push r25
 158               	/* prologue end (size=7) */
 159 005c 8091 0000 		lds r24,timer_cnt
 160 0060 9091 0000 		lds r25,(timer_cnt)+1
 161 0064 892B      		or r24,r25
 162 0066 51F0      		breq .L13
 163 0068 8091 0000 		lds r24,timer_cnt
 164 006c 9091 0000 		lds r25,(timer_cnt)+1
 165 0070 0197      		sbiw r24,1
 166 0072 9093 0000 		sts (timer_cnt)+1,r25
 167 0076 8093 0000 		sts timer_cnt,r24
 168 007a 02C0      		rjmp .L12
 169               	.L13:
 170 007c 1092 0000 		sts timer_on,__zero_reg__
 171               	.L12:
 172               	/* epilogue: frame size=0 */
 173 0080 9F91      		pop r25
 174 0082 8F91      		pop r24
 175 0084 0F90      		pop __tmp_reg__
 176 0086 0FBE      		out __SREG__,__tmp_reg__
 177 0088 0F90      		pop __tmp_reg__
 178 008a 1F90      		pop __zero_reg__
 179 008c 1895      		reti
 180               	/* epilogue end (size=7) */
 181               	/* function __vector_11 size 32 (18) */
 183               	.global	__vector_18
 185               	__vector_18:
 186               	/* prologue: frame size=0 */
 187 008e 1F92      		push __zero_reg__
 188 0090 0F92      		push __tmp_reg__
 189 0092 0FB6      		in __tmp_reg__,__SREG__
 190 0094 0F92      		push __tmp_reg__
 191 0096 1124      		clr __zero_reg__
 192 0098 2F93      		push r18
 193 009a 8F93      		push r24
 194 009c 9F93      		push r25
 195 009e EF93      		push r30
 196 00a0 FF93      		push r31
 197               	/* prologue end (size=10) */
 198 00a2 2091 C600 		lds r18,198
 199 00a6 9091 0000 		lds r25,doRelay
 200 00aa 9923      		tst r25
 201 00ac 79F0      		breq .L16
 202 00ae 8091 0000 		lds r24,receiveIndex
 203 00b2 8034      		cpi r24,lo8(64)
 204 00b4 F8F4      		brsh .L15
 205 00b6 8091 0000 		lds r24,receiveIndex
 206 00ba E82F      		mov r30,r24
 207 00bc FF27      		clr r31
 208 00be E050      		subi r30,lo8(-(receiveBuffer))
 209 00c0 F040      		sbci r31,hi8(-(receiveBuffer))
 210 00c2 2083      		st Z,r18
 211 00c4 8F5F      		subi r24,lo8(-(1))
 212 00c6 8093 0000 		sts receiveIndex,r24
 213 00ca 14C0      		rjmp .L15
 214               	.L16:
 215 00cc 8091 0000 		lds r24,sensors_flag
 216 00d0 8823      		tst r24
 217 00d2 81F0      		breq .L15
 218 00d4 8091 0000 		lds r24,sensors_index
 219 00d8 E82F      		mov r30,r24
 220 00da FF27      		clr r31
 221 00dc E050      		subi r30,lo8(-(sensors_in))
 222 00de F040      		sbci r31,hi8(-(sensors_in))
 223 00e0 2083      		st Z,r18
 224 00e2 8F5F      		subi r24,lo8(-(1))
 225 00e4 8093 0000 		sts sensors_index,r24
 226 00e8 8091 0000 		lds r24,sensors_index
 227 00ec 8433      		cpi r24,lo8(52)
 228 00ee 10F0      		brlo .L15
 229 00f0 9093 0000 		sts sensors_flag,r25
 230               	.L15:
 231               	/* epilogue: frame size=0 */
 232 00f4 FF91      		pop r31
 233 00f6 EF91      		pop r30
 234 00f8 9F91      		pop r25
 235 00fa 8F91      		pop r24
 236 00fc 2F91      		pop r18
 237 00fe 0F90      		pop __tmp_reg__
 238 0100 0FBE      		out __SREG__,__tmp_reg__
 239 0102 0F90      		pop __tmp_reg__
 240 0104 1F90      		pop __zero_reg__
 241 0106 1895      		reti
 242               	/* epilogue end (size=10) */
 243               	/* function __vector_18 size 61 (41) */
 245               	.global	readIRSensor
 247               	readIRSensor:
 248               	/* prologue: frame size=0 */
 249               	/* prologue end (size=0) */
 250 0108 85E4      		ldi r24,lo8(69)
 251 010a 8093 7C00 		sts 124,r24
 252 010e 8091 7A00 		lds r24,122
 253 0112 8064      		ori r24,lo8(64)
 254 0114 8093 7A00 		sts 122,r24
 255               	.L22:
 256 0118 8091 7A00 		lds r24,122
 257 011c 86FD      		sbrc r24,6
 258 011e FCCF      		rjmp .L22
 259 0120 8091 7800 		lds r24,120
 260 0124 9091 7900 		lds r25,(120)+1
 261               	/* epilogue: frame size=0 */
 262 0128 0895      		ret
 263               	/* epilogue end (size=1) */
 264               	/* function readIRSensor size 17 (16) */
 266               	.global	handleLocalCommand
 268               	handleLocalCommand:
 269               	/* prologue: frame size=0 */
 270 012a 0F93      		push r16
 271 012c 1F93      		push r17
 272               	/* prologue end (size=2) */
 273 012e 9927      		clr r25
 274 0130 8230      		cpi r24,2
 275 0132 9105      		cpc r25,__zero_reg__
 276 0134 59F0      		breq .L28
 277 0136 8330      		cpi r24,3
 278 0138 9105      		cpc r25,__zero_reg__
 279 013a 1CF4      		brge .L30
 280 013c 0197      		sbiw r24,1
 281 013e 21F0      		breq .L27
 282 0140 16C0      		rjmp .L26
 283               	.L30:
 284 0142 0397      		sbiw r24,3
 285 0144 29F0      		breq .L29
 286 0146 13C0      		rjmp .L26
 287               	.L27:
 288 0148 5E98      		cbi 43-0x20,6
 289 014a 11C0      		rjmp .L26
 290               	.L28:
 291 014c 5E9A      		sbi 43-0x20,6
 292 014e 0FC0      		rjmp .L26
 293               	.L29:
 294 0150 0E94 0000 		call readIRSensor
 295 0154 8C01      		movw r16,r24
 296 0156 812F      		mov r24,r17
 297 0158 9927      		clr r25
 298 015a 682F      		mov r22,r24
 299 015c 8091 0000 		lds r24,myport
 300 0160 0E94 0000 		call cm_ByteXmt
 301 0164 602F      		mov r22,r16
 302 0166 8091 0000 		lds r24,myport
 303 016a 0E94 0000 		call cm_ByteXmt
 304               	.L26:
 305 016e 1092 0000 		sts localAck,__zero_reg__
 306               	/* epilogue: frame size=0 */
 307 0172 1F91      		pop r17
 308 0174 0F91      		pop r16
 309 0176 0895      		ret
 310               	/* epilogue end (size=3) */
 311               	/* function handleLocalCommand size 41 (36) */
 313               	.global	relayCommand
 315               	relayCommand:
 316               	/* prologue: frame size=0 */
 317 0178 CF93      		push r28
 318               	/* prologue end (size=1) */
 319 017a 20C0      		rjmp .L51
 320               	.L39:
 321 017c 8091 0000 		lds r24,myport
 322 0180 0E94 0000 		call cm_read_char
 323 0184 C82F      		mov r28,r24
 324 0186 8F3F      		cpi r24,lo8(-1)
 325 0188 21F4      		brne .L35
 326 018a 8091 0000 		lds r24,prevVal
 327 018e 8823      		tst r24
 328 0190 5CF4      		brge .L34
 329               	.L35:
 330 0192 8091 0000 		lds r24,localAck
 331 0196 8823      		tst r24
 332 0198 21F4      		brne .L36
 333 019a 8C2F      		mov r24,r28
 334 019c 0E94 0000 		call byteTx
 335 01a0 03C0      		rjmp .L34
 336               	.L36:
 337 01a2 8C2F      		mov r24,r28
 338 01a4 0E94 0000 		call handleLocalCommand
 339               	.L34:
 340 01a8 C093 0000 		sts prevVal,r28
 341 01ac 8C2F      		mov r24,r28
 342 01ae 0E94 0000 		call checkLocalAck
 343 01b2 8823      		tst r24
 344 01b4 19F0      		breq .L51
 345 01b6 81E0      		ldi r24,lo8(1)
 346 01b8 8093 0000 		sts localAck,r24
 347               	.L51:
 348 01bc 8091 0000 		lds r24,myport
 349 01c0 0E94 0000 		call cm_char_rdy
 350 01c4 E82F      		mov r30,r24
 351 01c6 8823      		tst r24
 352 01c8 C9F6      		brne .L39
 353 01ca 8091 0000 		lds r24,receiveIndex
 354 01ce 8823      		tst r24
 355 01d0 91F0      		breq .L31
 356 01d2 CE2F      		mov r28,r30
 357               	.L50:
 358 01d4 8091 0000 		lds r24,receiveIndex
 359 01d8 C817      		cp r28,r24
 360 01da 58F4      		brsh .L46
 361 01dc EC2F      		mov r30,r28
 362 01de FF27      		clr r31
 363 01e0 E050      		subi r30,lo8(-(receiveBuffer))
 364 01e2 F040      		sbci r31,hi8(-(receiveBuffer))
 365 01e4 6081      		ld r22,Z
 366 01e6 8091 0000 		lds r24,myport
 367 01ea 0E94 0000 		call cm_ByteXmt
 368 01ee CF5F      		subi r28,lo8(-(1))
 369 01f0 F1CF      		rjmp .L50
 370               	.L46:
 371 01f2 1092 0000 		sts receiveIndex,__zero_reg__
 372               	.L31:
 373               	/* epilogue: frame size=0 */
 374 01f6 CF91      		pop r28
 375 01f8 0895      		ret
 376               	/* epilogue end (size=2) */
 377               	/* function relayCommand size 66 (63) */
 379               	.global	readProximitySensor
 381               	readProximitySensor:
 382               	/* prologue: frame size=0 */
 383               	/* prologue end (size=0) */
 384 01fa 81E4      		ldi r24,lo8(65)
 385 01fc 8093 7C00 		sts 124,r24
 386 0200 8091 7A00 		lds r24,122
 387 0204 8064      		ori r24,lo8(64)
 388 0206 8093 7A00 		sts 122,r24
 389               	.L53:
 390 020a 8091 7A00 		lds r24,122
 391 020e 86FD      		sbrc r24,6
 392 0210 FCCF      		rjmp .L53
 393 0212 8091 7800 		lds r24,120
 394 0216 9091 7900 		lds r25,(120)+1
 395               	/* epilogue: frame size=0 */
 396 021a 0895      		ret
 397               	/* epilogue end (size=1) */
 398               	/* function readProximitySensor size 17 (16) */
 400               	.global	driveDirect
 402               	driveDirect:
 403               	/* prologue: frame size=0 */
 404 021c EF92      		push r14
 405 021e FF92      		push r15
 406 0220 0F93      		push r16
 407 0222 1F93      		push r17
 408               	/* prologue end (size=4) */
 409 0224 8C01      		movw r16,r24
 410 0226 7B01      		movw r14,r22
 411 0228 81E9      		ldi r24,lo8(-111)
 412 022a 0E94 0000 		call byteTx
 413 022e 812F      		mov r24,r17
 414 0230 9927      		clr r25
 415 0232 0E94 0000 		call byteTx
 416 0236 802F      		mov r24,r16
 417 0238 0E94 0000 		call byteTx
 418 023c 8F2D      		mov r24,r15
 419 023e 9927      		clr r25
 420 0240 0E94 0000 		call byteTx
 421 0244 8E2D      		mov r24,r14
 422 0246 0E94 0000 		call byteTx
 423               	/* epilogue: frame size=0 */
 424 024a 1F91      		pop r17
 425 024c 0F91      		pop r16
 426 024e FF90      		pop r15
 427 0250 EF90      		pop r14
 428 0252 0895      		ret
 429               	/* epilogue end (size=5) */
 430               	/* function driveDirect size 28 (19) */
 432               	.global	drive
 434               	drive:
 435               	/* prologue: frame size=0 */
 436 0254 EF92      		push r14
 437 0256 FF92      		push r15
 438 0258 0F93      		push r16
 439 025a 1F93      		push r17
 440               	/* prologue end (size=4) */
 441 025c 8C01      		movw r16,r24
 442 025e 7B01      		movw r14,r22
 443 0260 89E8      		ldi r24,lo8(-119)
 444 0262 0E94 0000 		call byteTx
 445 0266 812F      		mov r24,r17
 446 0268 9927      		clr r25
 447 026a 0E94 0000 		call byteTx
 448 026e 802F      		mov r24,r16
 449 0270 0E94 0000 		call byteTx
 450 0274 8F2D      		mov r24,r15
 451 0276 9927      		clr r25
 452 0278 0E94 0000 		call byteTx
 453 027c 8E2D      		mov r24,r14
 454 027e 0E94 0000 		call byteTx
 455               	/* epilogue: frame size=0 */
 456 0282 1F91      		pop r17
 457 0284 0F91      		pop r16
 458 0286 FF90      		pop r15
 459 0288 EF90      		pop r14
 460 028a 0895      		ret
 461               	/* epilogue end (size=5) */
 462               	/* function drive size 28 (19) */
 464               	.global	checkIr
 466               	checkIr:
 467               	/* prologue: frame size=0 */
 468               	/* prologue end (size=0) */
 469 028c FC01      		movw r30,r24
 470 028e 8091 0000 		lds r24,sensors+10
 471 0292 9927      		clr r25
 472 0294 8338      		cpi r24,131
 473 0296 9105      		cpc r25,__zero_reg__
 474 0298 31F1      		breq .L63
 475 029a 8438      		cpi r24,132
 476 029c 9105      		cpc r25,__zero_reg__
 477 029e 54F4      		brge .L79
 478 02a0 8138      		cpi r24,129
 479 02a2 9105      		cpc r25,__zero_reg__
 480 02a4 E9F1      		breq .L70
 481 02a6 8238      		cpi r24,130
 482 02a8 9105      		cpc r25,__zero_reg__
 483 02aa 0CF0      		brlt .+2
 484 02ac 61C0      		rjmp .L77
 485 02ae 4397      		sbiw r24,19
 486 02b0 81F0      		breq .L60
 487 02b2 0895      		ret
 488               	.L79:
 489 02b4 8838      		cpi r24,136
 490 02b6 9105      		cpc r25,__zero_reg__
 491 02b8 99F0      		breq .L62
 492 02ba 8938      		cpi r24,137
 493 02bc 9105      		cpc r25,__zero_reg__
 494 02be 24F4      		brge .L80
 495 02c0 8538      		cpi r24,133
 496 02c2 9105      		cpc r25,__zero_reg__
 497 02c4 51F0      		breq .L61
 498 02c6 0895      		ret
 499               	.L80:
 500 02c8 8938      		cpi r24,137
 501 02ca 9105      		cpc r25,__zero_reg__
 502 02cc 09F4      		brne .+2
 503 02ce 5BC0      		rjmp .L78
 504 02d0 0895      		ret
 505               	.L60:
 506 02d2 8BB1      		in r24,43-0x20
 507 02d4 8F79      		andi r24,lo8(-97)
 508 02d6 8BB9      		out 43-0x20,r24
 509 02d8 0895      		ret
 510               	.L61:
 511 02da 5E98      		cbi 43-0x20,6
 512 02dc 2A9A      		sbi 37-0x20,2
 513 02de 0895      		ret
 514               	.L62:
 515 02e0 0E94 0000 		call doDrive
 516 02e4 0895      		ret
 517               	.L63:
 518 02e6 2081      		ld r18,Z
 519 02e8 3181      		ldd r19,Z+1
 520 02ea 2115      		cp r18,__zero_reg__
 521 02ec 3105      		cpc r19,__zero_reg__
 522 02ee 69F4      		brne .L64
 523 02f0 8281      		ldd r24,Z+2
 524 02f2 9381      		ldd r25,Z+3
 525 02f4 892B      		or r24,r25
 526 02f6 49F4      		brne .L64
 527 02f8 8481      		ldd r24,Z+4
 528 02fa 8230      		cpi r24,lo8(2)
 529 02fc E9F0      		breq .L92
 530 02fe 89E1      		ldi r24,lo8(25)
 531 0300 90E0      		ldi r25,hi8(25)
 532 0302 9683      		std Z+6,r25
 533 0304 8583      		std Z+5,r24
 534 0306 82E0      		ldi r24,lo8(2)
 535 0308 22C0      		rjmp .L91
 536               	.L64:
 537 030a 41E0      		ldi r20,hi8(500)
 538 030c 243F      		cpi r18,lo8(500)
 539 030e 3407      		cpc r19,r20
 540 0310 21F4      		brne .L68
 541 0312 8281      		ldd r24,Z+2
 542 0314 9381      		ldd r25,Z+3
 543 0316 4997      		sbiw r24,25
 544 0318 28C0      		rjmp .L90
 545               	.L68:
 546 031a 275E      		subi r18,lo8(-(25))
 547 031c 3F4F      		sbci r19,hi8(-(25))
 548 031e 21C0      		rjmp .L93
 549               	.L70:
 550 0320 2081      		ld r18,Z
 551 0322 3181      		ldd r19,Z+1
 552 0324 2115      		cp r18,__zero_reg__
 553 0326 3105      		cpc r19,__zero_reg__
 554 0328 A1F4      		brne .L71
 555 032a 8281      		ldd r24,Z+2
 556 032c 9381      		ldd r25,Z+3
 557 032e 892B      		or r24,r25
 558 0330 81F4      		brne .L71
 559 0332 8481      		ldd r24,Z+4
 560 0334 8130      		cpi r24,lo8(1)
 561 0336 31F4      		brne .L72
 562               	.L92:
 563 0338 8581      		ldd r24,Z+5
 564 033a 9681      		ldd r25,Z+6
 565 033c 4996      		adiw r24,25
 566 033e 9683      		std Z+6,r25
 567 0340 8583      		std Z+5,r24
 568 0342 25C0      		rjmp .L89
 569               	.L72:
 570 0344 89E1      		ldi r24,lo8(25)
 571 0346 90E0      		ldi r25,hi8(25)
 572 0348 9683      		std Z+6,r25
 573 034a 8583      		std Z+5,r24
 574 034c 81E0      		ldi r24,lo8(1)
 575               	.L91:
 576 034e 8483      		std Z+4,r24
 577 0350 1EC0      		rjmp .L89
 578               	.L71:
 579 0352 8281      		ldd r24,Z+2
 580 0354 9381      		ldd r25,Z+3
 581 0356 41E0      		ldi r20,hi8(500)
 582 0358 843F      		cpi r24,lo8(500)
 583 035a 9407      		cpc r25,r20
 584 035c 29F4      		brne .L75
 585 035e 2951      		subi r18,lo8(-(-25))
 586 0360 3040      		sbci r19,hi8(-(-25))
 587               	.L93:
 588 0362 3183      		std Z+1,r19
 589 0364 2083      		st Z,r18
 590 0366 13C0      		rjmp .L89
 591               	.L75:
 592 0368 4996      		adiw r24,25
 593               	.L90:
 594 036a 9383      		std Z+3,r25
 595 036c 8283      		std Z+2,r24
 596 036e 0FC0      		rjmp .L89
 597               	.L77:
 598 0370 1482      		std Z+4,__zero_reg__
 599 0372 1682      		std Z+6,__zero_reg__
 600 0374 1582      		std Z+5,__zero_reg__
 601 0376 8081      		ld r24,Z
 602 0378 9181      		ldd r25,Z+1
 603 037a 4996      		adiw r24,25
 604 037c 9183      		std Z+1,r25
 605 037e 8083      		st Z,r24
 606 0380 8281      		ldd r24,Z+2
 607 0382 9381      		ldd r25,Z+3
 608 0384 F1CF      		rjmp .L75
 609               	.L78:
 610 0386 1182      		std Z+1,__zero_reg__
 611 0388 1082      		st Z,__zero_reg__
 612 038a 1382      		std Z+3,__zero_reg__
 613 038c 1282      		std Z+2,__zero_reg__
 614               	.L89:
 615 038e 8081      		ld r24,Z
 616 0390 9181      		ldd r25,Z+1
 617 0392 855F      		subi r24,lo8(501)
 618 0394 9140      		sbci r25,hi8(501)
 619 0396 20F0      		brlo .L82
 620 0398 84EF      		ldi r24,lo8(500)
 621 039a 91E0      		ldi r25,hi8(500)
 622 039c 9183      		std Z+1,r25
 623 039e 8083      		st Z,r24
 624               	.L82:
 625 03a0 8281      		ldd r24,Z+2
 626 03a2 9381      		ldd r25,Z+3
 627 03a4 855F      		subi r24,lo8(501)
 628 03a6 9140      		sbci r25,hi8(501)
 629 03a8 20F0      		brlo .L83
 630 03aa 84EF      		ldi r24,lo8(500)
 631 03ac 91E0      		ldi r25,hi8(500)
 632 03ae 9383      		std Z+3,r25
 633 03b0 8283      		std Z+2,r24
 634               	.L83:
 635 03b2 8481      		ldd r24,Z+4
 636 03b4 682F      		mov r22,r24
 637 03b6 7727      		clr r23
 638 03b8 6130      		cpi r22,1
 639 03ba 7105      		cpc r23,__zero_reg__
 640 03bc 99F0      		breq .L94
 641 03be 6230      		cpi r22,2
 642 03c0 7105      		cpc r23,__zero_reg__
 643 03c2 1CF4      		brge .L88
 644 03c4 672B      		or r22,r23
 645 03c6 29F0      		breq .L85
 646 03c8 0895      		ret
 647               	.L88:
 648 03ca 6230      		cpi r22,2
 649 03cc 7105      		cpc r23,__zero_reg__
 650 03ce 41F0      		breq .L87
 651 03d0 0895      		ret
 652               	.L85:
 653 03d2 6081      		ld r22,Z
 654 03d4 7181      		ldd r23,Z+1
 655 03d6 8281      		ldd r24,Z+2
 656 03d8 9381      		ldd r25,Z+3
 657 03da 0E94 0000 		call driveDirect
 658 03de 0895      		ret
 659               	.L87:
 660 03e0 6FEF      		ldi r22,lo8(-1)
 661 03e2 7FEF      		ldi r23,hi8(-1)
 662               	.L94:
 663 03e4 8581      		ldd r24,Z+5
 664 03e6 9681      		ldd r25,Z+6
 665 03e8 0E94 0000 		call drive
 666 03ec 0895      		ret
 667               	/* epilogue: frame size=0 */
 668               	/* epilogue: noreturn */
 669               	/* epilogue end (size=0) */
 670               	/* function checkIr size 180 (180) */
 672               	.global	delayMs
 674               	delayMs:
 675               	/* prologue: frame size=0 */
 676               	/* prologue end (size=0) */
 677 03ee 9C01      		movw r18,r24
 678 03f0 81E0      		ldi r24,lo8(1)
 679 03f2 8093 0000 		sts timer_on,r24
 680 03f6 3093 0000 		sts (timer_cnt)+1,r19
 681 03fa 2093 0000 		sts timer_cnt,r18
 682               	.L96:
 683 03fe 8091 0000 		lds r24,timer_on
 684 0402 8823      		tst r24
 685 0404 E1F7      		brne .L96
 686               	/* epilogue: frame size=0 */
 687 0406 0895      		ret
 688               	/* epilogue end (size=1) */
 689               	/* function delayMs size 13 (12) */
 691               	.global	powerOnRobot
 693               	powerOnRobot:
 694               	/* prologue: frame size=0 */
 695               	/* prologue end (size=0) */
 696 0408 1D99      		sbic 35-0x20,5
 697 040a 13C0      		rjmp .L99
 698 040c 1D99      		sbic 35-0x20,5
 699 040e 0DC0      		rjmp .L105
 700               	.L103:
 701 0410 5F98      		cbi 43-0x20,7
 702 0412 84EF      		ldi r24,lo8(500)
 703 0414 91E0      		ldi r25,hi8(500)
 704 0416 0E94 0000 		call delayMs
 705 041a 5F9A      		sbi 43-0x20,7
 706 041c 84E6      		ldi r24,lo8(100)
 707 041e 90E0      		ldi r25,hi8(100)
 708 0420 0E94 0000 		call delayMs
 709 0424 5F98      		cbi 43-0x20,7
 710 0426 1D9B      		sbis 35-0x20,5
 711 0428 F3CF      		rjmp .L103
 712               	.L105:
 713 042a 8CEA      		ldi r24,lo8(3500)
 714 042c 9DE0      		ldi r25,hi8(3500)
 715 042e 0E94 0000 		call delayMs
 716               	.L99:
 717 0432 0895      		ret
 718               	/* epilogue: frame size=0 */
 719               	/* epilogue: noreturn */
 720               	/* epilogue end (size=0) */
 721               	/* function powerOnRobot size 22 (22) */
 723               	.global	checkBump
 725               	checkBump:
 726               	/* prologue: frame size=0 */
 727               	/* prologue end (size=0) */
 728 0434 FC01      		movw r30,r24
 729 0436 8281      		ldd r24,Z+2
 730 0438 9381      		ldd r25,Z+3
 731 043a 892B      		or r24,r25
 732 043c 21F4      		brne .L107
 733 043e 8081      		ld r24,Z
 734 0440 9181      		ldd r25,Z+1
 735 0442 892B      		or r24,r25
 736 0444 81F1      		breq .L106
 737               	.L107:
 738 0446 8091 0000 		lds r24,sensors+2
 739 044a 8823      		tst r24
 740 044c B9F4      		brne .L109
 741 044e 8091 0000 		lds r24,sensors+3
 742 0452 8823      		tst r24
 743 0454 99F4      		brne .L109
 744 0456 8091 0000 		lds r24,sensors+4
 745 045a 8823      		tst r24
 746 045c 79F4      		brne .L109
 747 045e 8091 0000 		lds r24,sensors+5
 748 0462 8823      		tst r24
 749 0464 59F4      		brne .L109
 750 0466 8091 0000 		lds r24,sensors
 751 046a 8823      		tst r24
 752 046c 39F4      		brne .L109
 753 046e 8091 0000 		lds r24,customSensors
 754 0472 9091 0000 		lds r25,(customSensors)+1
 755 0476 8D3D      		cpi r24,221
 756 0478 9105      		cpc r25,__zero_reg__
 757 047a A8F0      		brlo .L106
 758               	.L109:
 759 047c 1382      		std Z+3,__zero_reg__
 760 047e 1282      		std Z+2,__zero_reg__
 761 0480 1182      		std Z+1,__zero_reg__
 762 0482 1082      		st Z,__zero_reg__
 763 0484 1482      		std Z+4,__zero_reg__
 764 0486 1682      		std Z+6,__zero_reg__
 765 0488 1582      		std Z+5,__zero_reg__
 766 048a 6CE9      		ldi r22,lo8(-100)
 767 048c 7FEF      		ldi r23,hi8(-100)
 768 048e CB01      		movw r24,r22
 769 0490 0E94 0000 		call driveDirect
 770 0494 88EE      		ldi r24,lo8(1000)
 771 0496 93E0      		ldi r25,hi8(1000)
 772 0498 0E94 0000 		call delayMs
 773 049c 60E0      		ldi r22,lo8(0)
 774 049e 70E0      		ldi r23,hi8(0)
 775 04a0 CB01      		movw r24,r22
 776 04a2 0E94 0000 		call driveDirect
 777               	.L106:
 778 04a6 0895      		ret
 779               	/* epilogue: frame size=0 */
 780               	/* epilogue: noreturn */
 781               	/* epilogue end (size=0) */
 782               	/* function checkBump size 58 (58) */
 784               	.global	baud
 786               	baud:
 787               	/* prologue: frame size=0 */
 788 04a8 CF93      		push r28
 789               	/* prologue end (size=1) */
 790 04aa C82F      		mov r28,r24
 791 04ac 8C30      		cpi r24,lo8(12)
 792 04ae 08F0      		brlo .+2
 793 04b0 54C0      		rjmp .L110
 794 04b2 81E8      		ldi r24,lo8(-127)
 795 04b4 0E94 0000 		call byteTx
 796 04b8 8091 C000 		lds r24,192
 797 04bc 8064      		ori r24,lo8(64)
 798 04be 8093 C000 		sts 192,r24
 799 04c2 8C2F      		mov r24,r28
 800 04c4 0E94 0000 		call byteTx
 801               	.L112:
 802 04c8 8091 C000 		lds r24,192
 803 04cc 86FF      		sbrs r24,6
 804 04ce FCCF      		rjmp .L112
 805               	/* #APP */
 806 04d0 F894      		cli
 807               	/* #NOAPP */
 808 04d2 CB30      		cpi r28,lo8(11)
 809 04d4 19F4      		brne .L115
 810 04d6 89E0      		ldi r24,lo8(9)
 811 04d8 90E0      		ldi r25,hi8(9)
 812 04da 36C0      		rjmp .L138
 813               	.L115:
 814 04dc CA30      		cpi r28,lo8(10)
 815 04de 19F4      		brne .L117
 816 04e0 83E1      		ldi r24,lo8(19)
 817 04e2 90E0      		ldi r25,hi8(19)
 818 04e4 31C0      		rjmp .L138
 819               	.L117:
 820 04e6 C930      		cpi r28,lo8(9)
 821 04e8 19F4      		brne .L119
 822 04ea 8DE1      		ldi r24,lo8(29)
 823 04ec 90E0      		ldi r25,hi8(29)
 824 04ee 2CC0      		rjmp .L138
 825               	.L119:
 826 04f0 C830      		cpi r28,lo8(8)
 827 04f2 19F4      		brne .L121
 828 04f4 87E2      		ldi r24,lo8(39)
 829 04f6 90E0      		ldi r25,hi8(39)
 830 04f8 27C0      		rjmp .L138
 831               	.L121:
 832 04fa C730      		cpi r28,lo8(7)
 833 04fc 19F4      		brne .L123
 834 04fe 8BE3      		ldi r24,lo8(59)
 835 0500 90E0      		ldi r25,hi8(59)
 836 0502 22C0      		rjmp .L138
 837               	.L123:
 838 0504 C630      		cpi r28,lo8(6)
 839 0506 19F4      		brne .L125
 840 0508 8FE4      		ldi r24,lo8(79)
 841 050a 90E0      		ldi r25,hi8(79)
 842 050c 1DC0      		rjmp .L138
 843               	.L125:
 844 050e C530      		cpi r28,lo8(5)
 845 0510 19F4      		brne .L127
 846 0512 87E7      		ldi r24,lo8(119)
 847 0514 90E0      		ldi r25,hi8(119)
 848 0516 18C0      		rjmp .L138
 849               	.L127:
 850 0518 C430      		cpi r28,lo8(4)
 851 051a 19F4      		brne .L129
 852 051c 8FEE      		ldi r24,lo8(239)
 853 051e 90E0      		ldi r25,hi8(239)
 854 0520 13C0      		rjmp .L138
 855               	.L129:
 856 0522 C330      		cpi r28,lo8(3)
 857 0524 19F4      		brne .L131
 858 0526 8FED      		ldi r24,lo8(479)
 859 0528 91E0      		ldi r25,hi8(479)
 860 052a 0EC0      		rjmp .L138
 861               	.L131:
 862 052c C230      		cpi r28,lo8(2)
 863 052e 19F4      		brne .L133
 864 0530 8FEB      		ldi r24,lo8(959)
 865 0532 93E0      		ldi r25,hi8(959)
 866 0534 09C0      		rjmp .L138
 867               	.L133:
 868 0536 C130      		cpi r28,lo8(1)
 869 0538 19F4      		brne .L135
 870 053a 8FE7      		ldi r24,lo8(1919)
 871 053c 97E0      		ldi r25,hi8(1919)
 872 053e 04C0      		rjmp .L138
 873               	.L135:
 874 0540 CC23      		tst r28
 875 0542 31F4      		brne .L116
 876 0544 8FEF      		ldi r24,lo8(3839)
 877 0546 9EE0      		ldi r25,hi8(3839)
 878               	.L138:
 879 0548 9093 C500 		sts (196)+1,r25
 880 054c 8093 C400 		sts 196,r24
 881               	.L116:
 882               	/* #APP */
 883 0550 7894      		sei
 884               	/* #NOAPP */
 885 0552 84E6      		ldi r24,lo8(100)
 886 0554 90E0      		ldi r25,hi8(100)
 887 0556 0E94 0000 		call delayMs
 888               	.L110:
 889               	/* epilogue: frame size=0 */
 890 055a CF91      		pop r28
 891 055c 0895      		ret
 892               	/* epilogue end (size=2) */
 893               	/* function baud size 93 (90) */
 895               	.global	debug
 897               	debug:
 898               	/* prologue: frame size=0 */
 899               	/* prologue end (size=0) */
 900 055e BC01      		movw r22,r24
 901 0560 8091 0000 		lds r24,myport
 902 0564 0E94 0000 		call cm_send_line
 903               	/* epilogue: frame size=0 */
 904 0568 0895      		ret
 905               	/* epilogue end (size=1) */
 906               	/* function debug size 6 (5) */
 908               		.data
 909               	.LC0:
 910 0001 434D 436F 		.string	"CMControl Initialized\r\n"
 910      6E74 726F 
 910      6C20 496E 
 910      6974 6961 
 910      6C69 7A65 
 911               		.text
 912               	.global	initialize
 914               	initialize:
 915               	/* prologue: frame size=0 */
 916               	/* prologue end (size=0) */
 917               	/* #APP */
 918 056a F894      		cli
 919               	/* #NOAPP */
 920 056c 80E1      		ldi r24,lo8(16)
 921 056e 84B9      		out 36-0x20,r24
 922 0570 8FEC      		ldi r24,lo8(-49)
 923 0572 85B9      		out 37-0x20,r24
 924 0574 17B8      		out 39-0x20,__zero_reg__
 925 0576 88B1      		in r24,40-0x20
 926 0578 8D7D      		andi r24,lo8(-35)
 927 057a 88B9      		out 40-0x20,r24
 928 057c 86EE      		ldi r24,lo8(-26)
 929 057e 8AB9      		out 42-0x20,r24
 930 0580 8DE7      		ldi r24,lo8(125)
 931 0582 8BB9      		out 43-0x20,r24
 932 0584 229A      		sbi 36-0x20,2
 933 0586 2A98      		cbi 37-0x20,2
 934 0588 1092 8000 		sts 128,__zero_reg__
 935 058c 8CE0      		ldi r24,lo8(12)
 936 058e 8093 8100 		sts 129,r24
 937 0592 87E4      		ldi r24,lo8(71)
 938 0594 90E0      		ldi r25,hi8(71)
 939 0596 9093 8900 		sts (136)+1,r25
 940 059a 8093 8800 		sts 136,r24
 941 059e 82E0      		ldi r24,lo8(2)
 942 05a0 8093 6F00 		sts 111,r24
 943 05a4 83E1      		ldi r24,lo8(19)
 944 05a6 90E0      		ldi r25,hi8(19)
 945 05a8 9093 C500 		sts (196)+1,r25
 946 05ac 8093 C400 		sts 196,r24
 947 05b0 88E9      		ldi r24,lo8(-104)
 948 05b2 8093 C100 		sts 193,r24
 949 05b6 86E0      		ldi r24,lo8(6)
 950 05b8 8093 C200 		sts 194,r24
 951               	/* #APP */
 952 05bc 7894      		sei
 953               	/* #NOAPP */
 954 05be 63E0      		ldi r22,lo8(3)
 955 05c0 80E0      		ldi r24,lo8(0)
 956 05c2 0E94 0000 		call cm_init_UART
 957 05c6 8093 0000 		sts myport,r24
 958 05ca 8091 7E00 		lds r24,126
 959 05ce 8062      		ori r24,lo8(32)
 960 05d0 8093 7E00 		sts 126,r24
 961 05d4 8091 6400 		lds r24,100
 962 05d8 8E7F      		andi r24,lo8(-2)
 963 05da 8093 6400 		sts 100,r24
 964 05de 87E8      		ldi r24,lo8(-121)
 965 05e0 8093 7A00 		sts 122,r24
 966 05e4 85E4      		ldi r24,lo8(69)
 967 05e6 8093 7C00 		sts 124,r24
 968 05ea 8091 7E00 		lds r24,126
 969 05ee 8260      		ori r24,lo8(2)
 970 05f0 8093 7E00 		sts 126,r24
 971 05f4 8AEF      		ldi r24,lo8(250)
 972 05f6 90E0      		ldi r25,hi8(250)
 973 05f8 0E94 0000 		call delayMs
 974 05fc 80E0      		ldi r24,lo8(.LC0)
 975 05fe 90E0      		ldi r25,hi8(.LC0)
 976 0600 0E94 0000 		call debug
 977               	/* epilogue: frame size=0 */
 978 0604 0895      		ret
 979               	/* epilogue end (size=1) */
 980               	/* function initialize size 80 (79) */
 982               		.data
 983               	.LC1:
 984 0019 2000      		.string	" "
 985               		.text
 986               	.global	debugInt
 988               	debugInt:
 989               	/* prologue: frame size=16 */
 990 0606 CF93      		push r28
 991 0608 DF93      		push r29
 992 060a CDB7      		in r28,__SP_L__
 993 060c DEB7      		in r29,__SP_H__
 994 060e 6097      		sbiw r28,16
 995 0610 0FB6      		in __tmp_reg__,__SREG__
 996 0612 F894      		cli
 997 0614 DEBF      		out __SP_H__,r29
 998 0616 0FBE      		out __SREG__,__tmp_reg__
 999 0618 CDBF      		out __SP_L__,r28
 1000               	/* prologue end (size=10) */
 1001 061a 4AE0      		ldi r20,lo8(10)
 1002 061c 50E0      		ldi r21,hi8(10)
 1003 061e BE01      		movw r22,r28
 1004 0620 6F5F      		subi r22,lo8(-(1))
 1005 0622 7F4F      		sbci r23,hi8(-(1))
 1006 0624 0E94 0000 		call itoa
 1007 0628 BE01      		movw r22,r28
 1008 062a 6F5F      		subi r22,lo8(-(1))
 1009 062c 7F4F      		sbci r23,hi8(-(1))
 1010 062e 8091 0000 		lds r24,myport
 1011 0632 0E94 0000 		call cm_send_line
 1012 0636 60E0      		ldi r22,lo8(.LC1)
 1013 0638 70E0      		ldi r23,hi8(.LC1)
 1014 063a 8091 0000 		lds r24,myport
 1015 063e 0E94 0000 		call cm_send_line
 1016               	/* epilogue: frame size=16 */
 1017 0642 6096      		adiw r28,16
 1018 0644 0FB6      		in __tmp_reg__,__SREG__
 1019 0646 F894      		cli
 1020 0648 DEBF      		out __SP_H__,r29
 1021 064a 0FBE      		out __SREG__,__tmp_reg__
 1022 064c CDBF      		out __SP_L__,r28
 1023 064e DF91      		pop r29
 1024 0650 CF91      		pop r28
 1025 0652 0895      		ret
 1026               	/* epilogue end (size=9) */
 1027               	/* function debugInt size 39 (20) */
 1029               		.data
 1030               	.LC2:
 1031 001b 4952 2053 		.string	"IR Sensor: "
 1031      656E 736F 
 1031      723A 2000 
 1032               	.LC3:
 1033 0027 0D0A 00   		.string	"\r\n"
 1034               	.LC4:
 1035 002a 5072 6F78 		.string	"Proximity Sensor: "
 1035      696D 6974 
 1035      7920 5365 
 1035      6E73 6F72 
 1035      3A20 00
 1036               		.text
 1037               	.global	delayAndUpdateSensors
 1039               	delayAndUpdateSensors:
 1040               	/* prologue: frame size=0 */
 1041               	/* prologue end (size=0) */
 1042 0654 21E0      		ldi r18,lo8(1)
 1043 0656 2093 0000 		sts timer_on,r18
 1044 065a 9093 0000 		sts (timer_cnt)+1,r25
 1045 065e 8093 0000 		sts timer_cnt,r24
 1046               	.L157:
 1047 0662 8091 0000 		lds r24,timer_on
 1048 0666 8823      		tst r24
 1049 0668 09F4      		brne .+2
 1050 066a 75C0      		rjmp .L153
 1051 066c 8091 0000 		lds r24,sensors_flag
 1052 0670 8823      		tst r24
 1053 0672 B9F7      		brne .L157
 1054 0674 A0E0      		ldi r26,lo8(sensors_in)
 1055 0676 B0E0      		ldi r27,hi8(sensors_in)
 1056 0678 E0E0      		ldi r30,lo8(sensors)
 1057 067a F0E0      		ldi r31,hi8(sensors)
 1058 067c 93E3      		ldi r25,lo8(51)
 1059               	.L149:
 1060 067e 8D91      		ld r24,X+
 1061 0680 8193      		st Z+,r24
 1062 0682 9150      		subi r25,lo8(-(-1))
 1063 0684 97FF      		sbrs r25,7
 1064 0686 FBCF      		rjmp .L149
 1065 0688 8091 0000 		lds r24,sensors+12
 1066 068c 9927      		clr r25
 1067 068e 382F      		mov r19,r24
 1068 0690 2227      		clr r18
 1069 0692 8091 0000 		lds r24,sensors+13
 1070 0696 9927      		clr r25
 1071 0698 282B      		or r18,r24
 1072 069a 392B      		or r19,r25
 1073 069c 8091 0000 		lds r24,distance
 1074 06a0 9091 0000 		lds r25,(distance)+1
 1075 06a4 820F      		add r24,r18
 1076 06a6 931F      		adc r25,r19
 1077 06a8 9093 0000 		sts (distance)+1,r25
 1078 06ac 8093 0000 		sts distance,r24
 1079 06b0 8091 0000 		lds r24,sensors+14
 1080 06b4 9927      		clr r25
 1081 06b6 382F      		mov r19,r24
 1082 06b8 2227      		clr r18
 1083 06ba 8091 0000 		lds r24,sensors+15
 1084 06be 9927      		clr r25
 1085 06c0 282B      		or r18,r24
 1086 06c2 392B      		or r19,r25
 1087 06c4 8091 0000 		lds r24,angle
 1088 06c8 9091 0000 		lds r25,(angle)+1
 1089 06cc 820F      		add r24,r18
 1090 06ce 931F      		adc r25,r19
 1091 06d0 9093 0000 		sts (angle)+1,r25
 1092 06d4 8093 0000 		sts angle,r24
 1093 06d8 8EE8      		ldi r24,lo8(-114)
 1094 06da 0E94 0000 		call byteTx
 1095 06de 86E0      		ldi r24,lo8(6)
 1096 06e0 0E94 0000 		call byteTx
 1097 06e4 1092 0000 		sts sensors_index,__zero_reg__
 1098 06e8 81E0      		ldi r24,lo8(1)
 1099 06ea 8093 0000 		sts sensors_flag,r24
 1100 06ee 0E94 0000 		call readIRSensor
 1101 06f2 9093 0000 		sts (customSensors)+1,r25
 1102 06f6 8093 0000 		sts customSensors,r24
 1103 06fa 0E94 0000 		call readProximitySensor
 1104 06fe 9093 0000 		sts (customSensors+2)+1,r25
 1105 0702 8093 0000 		sts customSensors+2,r24
 1106 0706 8091 0000 		lds r24,debugCount
 1107 070a 8837      		cpi r24,lo8(120)
 1108 070c F4F0      		brlt .L150
 1109 070e 80E0      		ldi r24,lo8(.LC2)
 1110 0710 90E0      		ldi r25,hi8(.LC2)
 1111 0712 0E94 0000 		call debug
 1112 0716 8091 0000 		lds r24,customSensors
 1113 071a 9091 0000 		lds r25,(customSensors)+1
 1114 071e 0E94 0000 		call debugInt
 1115 0722 80E0      		ldi r24,lo8(.LC3)
 1116 0724 90E0      		ldi r25,hi8(.LC3)
 1117 0726 0E94 0000 		call debug
 1118 072a 80E0      		ldi r24,lo8(.LC4)
 1119 072c 90E0      		ldi r25,hi8(.LC4)
 1120 072e 0E94 0000 		call debug
 1121 0732 8091 0000 		lds r24,customSensors+2
 1122 0736 9091 0000 		lds r25,(customSensors+2)+1
 1123 073a 0E94 0000 		call debugInt
 1124 073e 80E0      		ldi r24,lo8(.LC3)
 1125 0740 90E0      		ldi r25,hi8(.LC3)
 1126 0742 0E94 0000 		call debug
 1127 0746 1092 0000 		sts debugCount,__zero_reg__
 1128               	.L150:
 1129 074a 8091 0000 		lds r24,debugCount
 1130 074e 8F5F      		subi r24,lo8(-(1))
 1131 0750 8093 0000 		sts debugCount,r24
 1132 0754 86CF      		rjmp .L157
 1133               	.L153:
 1134 0756 0895      		ret
 1135               	/* epilogue: frame size=0 */
 1136               	/* epilogue: noreturn */
 1137               	/* epilogue end (size=0) */
 1138               	/* function delayAndUpdateSensors size 130 (130) */
 1140               	.global	main
 1142               	main:
 1143               	/* prologue: frame size=7 */
 1144 0758 C0E0      		ldi r28,lo8(__stack - 7)
 1145 075a D0E0      		ldi r29,hi8(__stack - 7)
 1146 075c DEBF      		out __SP_H__,r29
 1147 075e CDBF      		out __SP_L__,r28
 1148               	/* prologue end (size=4) */
 1149 0760 0E94 0000 		call initialize
 1150 0764 0E94 0000 		call powerOnRobot
 1151 0768 80E8      		ldi r24,lo8(-128)
 1152 076a 0E94 0000 		call byteTx
 1153 076e 84E8      		ldi r24,lo8(-124)
 1154 0770 0E94 0000 		call byteTx
 1155 0774 8BB1      		in r24,43-0x20
 1156 0776 8066      		ori r24,lo8(96)
 1157 0778 8BB9      		out 43-0x20,r24
 1158 077a 5D98      		cbi 43-0x20,5
 1159               	.L167:
 1160 077c 8091 0000 		lds r24,doRelay
 1161 0780 8823      		tst r24
 1162 0782 19F0      		breq .L161
 1163 0784 0E94 0000 		call relayCommand
 1164 0788 0CC0      		rjmp .L162
 1165               	.L161:
 1166 078a 8FE0      		ldi r24,lo8(15)
 1167 078c 90E0      		ldi r25,hi8(15)
 1168 078e 0E94 0000 		call delayAndUpdateSensors
 1169 0792 CE01      		movw r24,r28
 1170 0794 0196      		adiw r24,1
 1171 0796 0E94 0000 		call checkIr
 1172 079a CE01      		movw r24,r28
 1173 079c 0196      		adiw r24,1
 1174 079e 0E94 0000 		call checkBump
 1175               	.L162:
 1176 07a2 4C99      		sbic 41-0x20,4
 1177 07a4 EBCF      		rjmp .L167
 1178 07a6 81E9      		ldi r24,lo8(-111)
 1179 07a8 0E94 0000 		call byteTx
 1180 07ac 80E0      		ldi r24,lo8(0)
 1181 07ae 0E94 0000 		call byteTx
 1182 07b2 80E0      		ldi r24,lo8(0)
 1183 07b4 0E94 0000 		call byteTx
 1184 07b8 80E0      		ldi r24,lo8(0)
 1185 07ba 0E94 0000 		call byteTx
 1186 07be 80E0      		ldi r24,lo8(0)
 1187 07c0 0E94 0000 		call byteTx
 1188 07c4 80E8      		ldi r24,lo8(-128)
 1189 07c6 0E94 0000 		call byteTx
 1190 07ca D8CF      		rjmp .L167
 1191               	/* epilogue: frame size=7 */
 1192               	/* epilogue: noreturn */
 1193               	/* epilogue end (size=0) */
 1194               	/* function main size 58 (54) */
 1196               		.comm receiveBuffer,64,1
 1197               		.comm sensors_in,52,1
 1198               		.comm sensors,52,1
 1199               		.comm customSensors,4,1
 1200               	/* File "cmcontrol.c": code 1008 = 0x03f0 ( 916), prologues  43, epilogues  49 */
DEFINED SYMBOLS
                            *ABS*:00000000 cmcontrol.c
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:7      *ABS*:00000001 __zero_reg__
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:15     .bss:00000000 sensors_index
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:21     .bss:00000001 sensors_flag
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:27     .bss:00000002 debugCount
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:33     .bss:00000003 angle
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:39     .bss:00000005 distance
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:45     .bss:00000007 doRelay
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:51     .bss:00000008 localAck
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:57     .bss:00000009 localAckIndex
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:63     .data:00000000 prevVal
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:70     .bss:0000000a myport
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:76     .bss:0000000b receiveIndex
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:82     .bss:0000000c timer_on
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:88     .bss:0000000d timer_cnt
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:93     .text:00000000 byteTx
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:109    .text:00000010 checkLocalAck
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:149    .text:0000004e __vector_11
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:185    .text:0000008e __vector_18
                            *COM*:00000040 receiveBuffer
                            *COM*:00000034 sensors_in
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:247    .text:00000108 readIRSensor
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:268    .text:0000012a handleLocalCommand
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:315    .text:00000178 relayCommand
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:381    .text:000001fa readProximitySensor
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:402    .text:0000021c driveDirect
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:434    .text:00000254 drive
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:466    .text:0000028c checkIr
                            *COM*:00000034 sensors
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:674    .text:000003ee delayMs
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:693    .text:00000408 powerOnRobot
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:725    .text:00000434 checkBump
                            *COM*:00000004 customSensors
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:786    .text:000004a8 baud
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:897    .text:0000055e debug
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:914    .text:0000056a initialize
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:988    .text:00000606 debugInt
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:1039   .text:00000654 delayAndUpdateSensors
C:\DOCUME~1\Kevin\LOCALS~1\Temp/ccm0aaaa.s:1142   .text:00000758 main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
cm_ByteXmt
cm_read_char
cm_char_rdy
doDrive
cm_send_line
cm_init_UART
itoa
__stack
